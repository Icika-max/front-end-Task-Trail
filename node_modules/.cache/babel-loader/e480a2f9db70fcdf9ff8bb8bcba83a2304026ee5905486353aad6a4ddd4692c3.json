{"ast":null,"code":"var _jsxFileName = \"/home/icika/phase5/to-dos/src/components/AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState();\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== '') {\n      setTodos([...todos, newTodo.trim()]);\n      setNewTodo('');\n    }\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTodo\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-input \",\n      type: \"text\",\n      placeholder: \"Enter a new todo\",\n      value: newTodo,\n      onChange: event => setNewTodo(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button \",\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"+89YO6GTV9PsYJmQujhPVHONlVo=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","_s","todos","setTodos","newTodo","setNewTodo","handleAddTodo","trim","fetch","method","headers","body","JSON","stringify","title","then","response","json","data","console","log","catch","error","className","children","type","placeholder","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","todo","index","_c","$RefreshReg$"],"sources":["/home/icika/phase5/to-dos/src/components/AddTask.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState();\n\n  const handleAddTodo = () => {\n    if (newTodo.trim() !== '') {\n      setTodos([...todos, newTodo.trim()]);\n      setNewTodo('');\n    }\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({title:newTodo})\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n  \n\n  };\n \n  \n\n  return (\n    <div className='todo-container'>\n      <input\n      className='todo-input '\n        type=\"text\"\n        placeholder=\"Enter a new todo\"\n        value={newTodo}\n        onChange={(event) => setNewTodo(event.target.value)}\n      />\n      <button className='todo-button ' onClick={handleAddTodo}>Add Todo</button>\n     \n      <ul className='todo-list'>\n        {/* <h2>All Todos</h2> */}\n        {todos.map((todo, index) => (\n          <li key={index}>{todo}</li>\n        ))}\n       \n      </ul>\n     \n    </div>\n  );\n};\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,EAAE;EAExC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,EAAE,KAAK,EAAE,EAAE;MACzBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,OAAO,CAACG,IAAI,EAAE,CAAC,CAAC;MACpCF,UAAU,CAAC,EAAE,CAAC;IAChB;IACAG,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,KAAK,EAACV;MAAO,CAAC;IACtC,CAAC,CAAC,CACCW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EAGzC,CAAC;EAID,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MACAwB,SAAS,EAAC,aAAa;MACrBE,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEvB,OAAQ;MACfwB,QAAQ,EAAGC,KAAK,IAAKxB,UAAU,CAACwB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,eACFnC,OAAA;MAAQwB,SAAS,EAAC,cAAc;MAACY,OAAO,EAAE7B,aAAc;MAAAkB,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAE1EnC,OAAA;MAAIwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAEtBtB,KAAK,CAACkC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBvC,OAAA;QAAAyB,QAAA,EAAiBa;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAED;AAEV,CAAC;AAACjC,EAAA,CA9CID,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}