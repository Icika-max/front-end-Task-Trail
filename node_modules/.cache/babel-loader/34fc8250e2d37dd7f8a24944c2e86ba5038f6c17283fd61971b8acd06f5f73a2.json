{"ast":null,"code":"var _jsxFileName = \"/home/icika/phase5/to-dos/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setNewTodo] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3000/todos').then(r => r.json()).then(data => setNewTodo(data));\n  }, []);\n  const handleDelete = id => {\n    fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setNewTodo(todos.filter(todo => todo.id !== id));\n    }).catch(error => console.error(error));\n  };\n  const handleUpdate = (id, title) => {\n    fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title\n      })\n    }).then(() => {\n      setNewTodo(todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title\n          };\n        } else {\n          return todo;\n        }\n      }));\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo.title,\n        onChange: e => handleUpdate(todo.id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(todo.id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"Eo5vPaehmslCRiVteOpbXWoRrgM=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TodoList","_s","todos","setNewTodo","fetch","then","r","json","data","handleDelete","id","method","filter","todo","catch","error","console","handleUpdate","title","headers","body","JSON","stringify","map","className","children","index","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/icika/phase5/to-dos/src/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst TodoList = () => {\n  const [todos, setNewTodo] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/todos')\n      .then((r) => r.json())\n      .then((data) => setNewTodo(data));\n  }, []);\n\n  const handleDelete = (id) => {\n    fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        setNewTodo(todos.filter((todo) => todo.id !== id));\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const handleUpdate = (id, title) => {\n    fetch(`http://localhost:3000/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title }),\n    })\n      .then(() => {\n        setNewTodo(\n          todos.map((todo) => {\n            if (todo.id === id) {\n              return { ...todo, title };\n            } else {\n              return todo;\n            }\n          })\n        );\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <ul className='todo-list'>\n      {/* <h2>All Todos</h2> */}\n      {todos.map((todo, index) => (\n        <li key={index}>\n          <input\n            type='text'\n            value={todo.title}\n            onChange={(e) => handleUpdate(todo.id, e.target.value)}\n          />\n          <button onClick={() => handleDelete(todo.id)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAAEG,IAAI,IAAKL,UAAU,CAACK,IAAI,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3BN,KAAK,CAAE,+BAA8BM,EAAG,EAAC,EAAE;MACzCC,MAAM,EAAE;IACV,CAAC,CAAC,CACCN,IAAI,CAAC,MAAM;MACVF,UAAU,CAACD,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,YAAY,GAAGA,CAACP,EAAE,EAAEQ,KAAK,KAAK;IAClCd,KAAK,CAAE,+BAA8BM,EAAG,EAAC,EAAE;MACzCC,MAAM,EAAE,KAAK;MACbQ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEJ;MAAM,CAAC;IAChC,CAAC,CAAC,CACCb,IAAI,CAAC,MAAM;MACVF,UAAU,CACRD,KAAK,CAACqB,GAAG,CAAEV,IAAI,IAAK;QAClB,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;UAClB,OAAO;YAAE,GAAGG,IAAI;YAAEK;UAAM,CAAC;QAC3B,CAAC,MAAM;UACL,OAAOL,IAAI;QACb;MACF,CAAC,CAAC,CACH;IACH,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,oBACEhB,OAAA;IAAIyB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAEtBvB,KAAK,CAACqB,GAAG,CAAC,CAACV,IAAI,EAAEa,KAAK,kBACrB3B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEf,IAAI,CAACK,KAAM;QAClBW,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACJ,IAAI,CAACH,EAAE,EAAEoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvD,eACFpC,OAAA;QAAQqC,OAAO,EAAEA,CAAA,KAAM3B,YAAY,CAACI,IAAI,CAACH,EAAE,CAAE;QAAAe,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GANtDT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAQf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET,CAAC;AAAClC,EAAA,CAxDID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}